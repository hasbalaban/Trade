plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'

    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'

}

android {
    namespace 'com.finance.trade_learn'
    signingConfigs {
        release {
            storeFile file(FILE_PATH)
            keyAlias KEY_ALIAS
            storePassword KEYSTORE_PASSWORD
            keyPassword KEY_PASSWORD
        }

        debug {
            storeFile file('myKey.jks')
            keyAlias KEY_ALIAS
            storePassword KEYSTORE_PASSWORD
            keyPassword KEY_PASSWORD
        }
    }
    compileSdk 34

    defaultConfig {
        applicationId "com.finance.trade_learn"
        minSdk 30
        targetSdk 34
        versionCode 99
        versionName "2.6.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

    }

    composeOptions{
        kotlinCompilerExtensionVersion = "1.5.14"
    }

    buildTypes {
        release {
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            ndk {
                abiFilters ""
            }
            manifestPlaceholders = [crashlyticsCollectionEnabled:"true"]
        }
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            signingConfig signingConfigs.debug
            manifestPlaceholders = [crashlyticsCollectionEnabled:"false"]
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        compose true
    }

}

dependencies {


    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.compose.material3:material3-android:1.3.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


    //Lifecycler
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    // Hilt
    implementation 'com.google.dagger:hilt-android:2.51.1'
    kapt 'com.google.dagger:hilt-android-compiler:2.51.1'
    // room
    def room_version = "2.6.1"

    implementation("androidx.room:room-runtime:$room_version")
    kapt("androidx.room:room-compiler:$room_version")
    implementation "androidx.room:room-ktx:$room_version"
    annotationProcessor 'android.arch.persistence.room:compiler:1.1.1'



    ///kotlin Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    //Retrofit for rest  -- it's means download data
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.3.0"


    // workmanager
    def work_version = "1.0.0"
    implementation "android.arch.work:work-runtime-ktx:$work_version"
    implementation 'androidx.work:work-runtime-ktx:2.7.1'


    // Play Core Android - used to prom a review
    implementation 'com.google.android.play:asset-delivery-ktx:2.2.2'
    implementation 'com.google.android.play:review-ktx:2.0.1'


    //admob
    implementation 'com.google.android.gms:play-services-ads:21.1.0'


    def composeBom = platform('androidx.compose:compose-bom:2023.03.00')
    implementation composeBom

    // Choose one of the following:
    // Material Design 3
    implementation 'androidx.compose.material3:material3'
    // or Material Design 2
    implementation 'androidx.compose.material:material'
    // or skip Material Design and build directly on top of foundational components
    implementation 'androidx.compose.foundation:foundation'
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation 'androidx.compose.ui:ui'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation("androidx.compose.material:material-icons-core")
    // Optional - Add full set of material icons
    implementation("androidx.compose.material:material-icons-extended")
    // Optional - Add window size utils
    implementation("androidx.compose.material3:material3-window-size-class")

    // Optional - Integration with activities
    implementation("androidx.activity:activity-compose:1.8.1")
    // Optional - Integration with ViewModels
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1")
    // Optional - Integration with LiveData
    implementation("androidx.compose.runtime:runtime-livedata")

    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    implementation("io.coil-kt:coil-compose:2.6.0")


    def nav_version = "2.6.0"

    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    implementation 'com.android.support:multidex:1.0.3'
    implementation "androidx.datastore:datastore-preferences:1.1.1"

    //lottie animation
    implementation("com.airbnb.android:lottie-compose:6.0.0")

    //firebase
    implementation(platform("com.google.firebase:firebase-bom:33.2.0"))

    // Add the dependencies for the Crashlytics and Analytics -  remote config libraries
    implementation("com.google.firebase:firebase-crashlytics")
    implementation("com.google.firebase:firebase-analytics")

    implementation("com.google.firebase:firebase-config")



}